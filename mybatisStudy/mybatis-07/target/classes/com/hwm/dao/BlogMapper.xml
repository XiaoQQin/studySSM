<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace会绑定一个Dao接口-->
<mapper namespace="com.hwm.dao.BlogMapper">

    <insert id="addBlog" parameterType="Blog">
        insert into blog(id,title,author,create_time,views)
        values (#{id},#{title},#{author},#{createTime},#{views})
    </insert>

    <select id="queryBlog" resultType="Blog" parameterType="map">
        select * from blog where  1=1

        <if test="title != null">
            and title=#{title}
        </if>

        <if test="author !=null">
            and author=#{author}
        </if>
    </select>
    <sql id="title-author">
        <if test="title!=null">
            title=#{title}
        </if>
        <if test="author!=null">
            and author=#{author}
        </if>
    </sql>
    <select id="queryBlogChoose" parameterType="map" resultType="Blog">
        <!--where 是如果条件全都满足，那么就全部-->
        select * from blog
        <where>
            <include refid="title-author"/>
        </where>

    </select>


    <select id="queryBlogChoose2" parameterType="map" resultType="Blog">
        <!--choose的话就是从上到下，满足一项即可-->
        select  * from blog
        <where>
            <choose>
                <when test="title!=null">
                    title=#{title}
                </when>

                <when test="author!=null">
                    and author=#{author}
                </when>

                <otherwise>
                    and views=#{views}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update blog
        <set>
            <if test="title!=null">title=#{title},</if>

            <if test="author!=null">author=#{author},</if>

            <if test="views!=null"> views=#{views}</if>
        </set>
        where  id=#{id}

    </update>

    <!--传递map,map中有集合-->
    <select id="queryBlogForEach" parameterType="map" resultType="Blog">
        select * from blog
        <where>
            <foreach collection="ids" item="id" open="(" separator="or" close=")">
                id=#{id}
            </foreach>
        </where>
    </select>
</mapper>